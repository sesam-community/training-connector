[
  {
    "_id": "{{@ system @}}-{{@ datatype @}}-share",
    "batch_size": 1,
    "namespaced_identifiers": false,
    "sink": {
      "deletion_tracking": false,
      "set_initial_offset": "onload"
    },
    "source": {
      "dataset": "{{@ system @}}-{{@ datatype @}}-transform",
      "type": "dataset"
    },
    "transform": [
      {
        "rules": {
          "default": [
            [
              "if",
              [
                "and",
                [
                  "eq",
                  "_S.$replaced",
                  true
                ],
                [
                  "eq",
                  "_S._deleted",
                  true
                ]
              ],
              [
                "merge",
                [
                  "apply",
                  "discard-replaced",
                  "_S."
                ]
              ],
              [
                "if",
                [
                  "is-not-null",
                  "_S.id"
                ],
                [
                  "if",
                  [
                    "eq",
                    "_S._deleted",
                    true
                  ],
                  [
                    [
                      "comment",
                      "Entity is deleted and it does have a system specific id."
                    ],
                    [
                      "merge",
                      [
                        "apply",
                        "delete",
                        "_S."
                      ]
                    ]
                  ],
                  [
                    [
                      "comment",
                      "Entity is not deleted and it does have a system specific id."
                    ],
                    [
                      "merge",
                      [
                        "apply",
                        "lookup",
                        "_S."
                      ]
                    ]
                  ]
                ],
                [
                  "if",
                  [
                    "eq",
                    "_S._deleted",
                    true
                  ],
                  [
                    "merge",
                    [
                      "apply",
                      "discard-delete-non-existent",
                      "_S."
                    ]
                  ],
                  [
                    [
                      "comment",
                      "At this point there is no primary key, so we should do an insert unless there are sink entity ids in $ids with $generated_id in them."
                    ],
                    [
                      "if",
                      [
                        "is-not-empty",
                        [
                          "filter",
                          [
                            "is-not-null",
                            "_."
                          ],
                          [
                            "hops",
                            {
                              "datasets": [
                                "{{@ system @}}-{{@ datatype @}}-share st"
                              ],
                              "return": "st.$generated_id",
                              "track-dependencies": false,
                              "where": [
                                [
                                  "eq",
                                  "_S.$ids",
                                  [
                                    "ni",
                                    "st._id"
                                  ]
                                ]
                              ]
                            }
                          ]
                        ]
                      ],
                      [
                        "merge",
                        [
                          "apply",
                          "discard-already-inserted",
                          "_S."
                        ]
                      ],
                      [
                        [
                          "comment",
                          "Entity is not deleted, it does not have a system specific id and it does not exist in sink dataset."
                        ],
                        [
                          "merge",
                          [
                            "apply",
                            "insert",
                            "_S."
                          ]
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ],
            [
              "add",
              "$source",
              "_S."
            ],
            [
              "copy",
              "id"
            ],
            [
              "copy",
              "$replaced"
            ],
            [
              "add",
              "$trace_operations",
              [
                "list"
              ]
            ]
          ],
          "delete": [
            [
              "add",
              "$operation",
              "delete"
            ]
          ],
          "discard-already-inserted": [
            [
              "add",
              "$operation",
              "discard-already-inserted"
            ]
          ],
          "discard-delete-non-existent": [
            [
              "add",
              "$operation",
              "discard-delete-non-existent"
            ]
          ],
          "discard-replaced": [
            [
              "add",
              "$operation",
              "discard-replaced"
            ]
          ],
          "insert": [
            [
              "add",
              "$operation",
              "insert"
            ],
            [
              "add",
              "payload",
              [
                "apply",
                "payload",
                "_S."
              ]
            ]
          ],
          "lookup": [
            [
              "add",
              "$operation",
              "lookup"
            ]
          ],
          "payload": [
            [
              "merge",
              [
                "dict",
                [
                  "filter",
                  [
                    "not",
                    [
                      "or",
                      [
                        "matches",
                        "_*",
                        [
                          "first",
                          "_."
                        ]
                      ],
                      [
                        "matches",
                        "$*",
                        [
                          "first",
                          "_."
                        ]
                      ]
                    ]
                  ],
                  [
                    "items",
                    "_S."
                  ]
                ]
              ]
            ]
          ]
        },
        "type": "dtl"
      },
      {
        "allowed_status_codes": "200,400,404",
        "operation": "lookup",
        "properties": {
          "datatype": "{{@ datatype @}}"
        },
        "replace_entity": false,
        "response_property": "response_body",
        "response_status_property": "response_status",
        "side_effects": true,
        "system": "{{@ system @}}",
        "trigger_on": {
          "key": "$operation",
          "value": "lookup"
        },
        "type": "rest"
      },
      {
        "rules": {
          "based-on-comparison": [
            [
              "comment",
              "If looked up entity is different from $based_on then noop. If looked up entity is same as _S then noop - otherwise perform update"
            ],
            [
              "add",
              "$based_on_source",
              "_S.$source.$based_on"
            ],
            [
              "merge",
              [
                "apply",
                "based-on-lookup",
                "_S."
              ]
            ],
            [
              "merge",
              [
                "apply",
                "based-on-update",
                "_S."
              ]
            ],
            [
              "if",
              [
                "neq",
                "_T.$based_on_lookup",
                "_T.$based_on_source"
              ],
              [
                "add",
                "$result",
                "modified-in-system"
              ],
              [
                "if",
                [
                  "neq",
                  "_T.$based_on_update",
                  "_T.$based_on_source"
                ],
                [
                  "add",
                  "$result",
                  "needs-update"
                ],
                [
                  "add",
                  "$result",
                  "entity-not-changed"
                ]
              ]
            ]
          ],
          "based-on-lookup": [
            [
              "add",
              "$based_on_lookup",
              [
                "dict",
                [
                  "filter",
                  [
                    "in",
                    [
                      "first",
                      "_."
                    ],
                    [
                      "keys",
                      "_S.$source.$based_on"
                    ]
                  ],
                  [
                    "items",
                    [
                      "first",
                      "_S.response_body"
                    ]
                  ]
                ]
              ]
            ]
          ],
          "based-on-update": [
            [
              "add",
              "$based_on_update",
              [
                "dict",
                [
                  "filter",
                  [
                    "in",
                    [
                      "first",
                      "_."
                    ],
                    [
                      "keys",
                      "_S.$source.$based_on"
                    ]
                  ],
                  [
                    "items",
                    "_S.$source"
                  ]
                ]
              ]
            ]
          ],
          "default": [
            [
              "if",
              [
                "neq",
                "_S.$operation",
                "lookup"
              ],
              [
                "copy",
                "*"
              ],
              [
                [
                  "if",
                  [
                    "neq",
                    "_S.response_status",
                    200
                  ],
                  [
                    "copy",
                    "*"
                  ],
                  [
                    [
                      "add",
                      "$comparison",
                      [
                        "apply",
                        "based-on-comparison",
                        "_S."
                      ]
                    ],
                    [
                      "case-eq",
                      [
                        "path",
                        "$result",
                        "_T.$comparison"
                      ],
                      "modified-in-system",
                      [
                        "merge",
                        [
                          "apply",
                          "discard-modified-in-system",
                          "_S."
                        ]
                      ],
                      "entity-not-changed",
                      [
                        "merge",
                        [
                          "apply",
                          "discard-entity-not-changed",
                          "_S."
                        ]
                      ],
                      [
                        "merge",
                        [
                          "apply",
                          "update",
                          "_S."
                        ]
                      ]
                    ],
                    [
                      "copy",
                      "$source"
                    ],
                    [
                      "copy",
                      "$replaced"
                    ],
                    [
                      "add",
                      "$trace_operations",
                      [
                        "combine",
                        "_S.$trace_operations",
                        "_S."
                      ]
                    ]
                  ]
                ]
              ]
            ]
          ],
          "discard-entity-not-changed": [
            [
              "add",
              "$operation",
              "discard-entity-not-changed"
            ]
          ],
          "discard-modified-in-system": [
            [
              "add",
              "$operation",
              "discard-modified-in-system"
            ]
          ],
          "payload": [
            [
              "merge",
              [
                "dict",
                [
                  "filter",
                  [
                    "not",
                    [
                      "or",
                      [
                        "matches",
                        "_*",
                        [
                          "first",
                          "_."
                        ]
                      ],
                      [
                        "matches",
                        "$*",
                        [
                          "first",
                          "_."
                        ]
                      ]
                    ]
                  ],
                  [
                    "items",
                    "_S."
                  ]
                ]
              ]
            ]
          ],
          "update": [
            [
              "comment",
              "May need to shape payload somewhat?"
            ],
            [
              "merge",
              [
                "apply",
                "payload",
                "_S."
              ]
            ],
            [
              "add",
              "$operation",
              "update"
            ],
            [
              "add",
              "payload",
              [
                "apply",
                "payload",
                "_S.$source"
              ]
            ]
          ]
        },
        "type": "dtl"
      },
      {
        "allowed_status_codes": "200,400,404",
        "operation": "update",
        "properties": {
          "datatype": "{{@ datatype @}}"
        },
        "replace_entity": false,
        "response_property": "response_body",
        "response_status_property": "response_status",
        "side_effects": true,
        "system": "{{@ system @}}",
        "trigger_on": {
          "key": "$operation",
          "value": "update"
        },
        "type": "rest"
      },
      {
        "allowed_status_codes": "200,201,400",
        "operation": "insert",
        "properties": {
          "datatype": "{{@ datatype @}}"
        },
        "replace_entity": false,
        "response_property": "response_body",
        "response_status_property": "response_status",
        "side_effects": true,
        "system": "{{@ system @}}",
        "trigger_on": {
          "key": "$operation",
          "value": "insert"
        },
        "type": "rest"
      },
      {
        "allowed_status_codes": "200,400,404",
        "operation": "delete",
        "properties": {
          "datatype": "{{@ datatype @}}"
        },
        "replace_entity": false,
        "response_property": "response_body",
        "response_status_property": "response_status",
        "side_effects": true,
        "system": "{{@ system @}}",
        "trigger_on": {
          "key": "$operation",
          "value": "delete"
        },
        "type": "rest"
      },
      {
        "rules": {
          "default": [
            [
              "copy",
              "$source"
            ],
            [
              "copy",
              "$replaced"
            ],
            [
              "add",
              "$last_operation",
              "_S.$operation"
            ],
            [
              "add",
              "$trace_operations",
              [
                "combine",
                "_S.$trace_operations",
                "_S."
              ]
            ],
            [
              "if",
              [
                "eq",
                "_S.$operation",
                "insert"
              ],
              [
                [
                  "add",
                  "$origin",
                  "_S._id"
                ],
                [
                  "add",
                  "$generated_id",
                  [
                    "first",
                    "_S.response_body.id"
                  ]
                ]
              ]
            ],
            [
              "add",
              "$previous",
              [
                "apply",
                "previous",
                [
                  "first",
                  [
                    "hops",
                    {
                      "datasets": [
                        "{{@ system @}}-{{@ datatype @}}-share st"
                      ],
                      "track-dependencies": false,
                      "where": [
                        [
                          "eq",
                          "_S._id",
                          "st._id"
                        ]
                      ]
                    }
                  ]
                ]
              ]
            ],
            [
              "if",
              [
                "and",
                [
                  "is-null",
                  "_T.$generated_id"
                ],
                [
                  "is-not-null",
                  "_T.$previous.$generated_id"
                ]
              ],
              [
                "add",
                "$generated_id",
                "_T.$previous.$generated_id"
              ]
            ],
            [
              "comment",
              "If entity is $replaced and it has a $generated_id then we must not delete it."
            ],
            [
              "if",
              [
                "and",
                [
                  "is-not-null",
                  "_T.$generated_id"
                ],
                [
                  "eq",
                  "_S.$operation",
                  "discard-replaced"
                ]
              ],
              [
                "add",
                "_deleted",
                false
              ]
            ],
            [
              "if",
              [
                "and",
                [
                  "is-null",
                  "_T.$origin"
                ],
                [
                  "is-not-null",
                  "_T.$previous.$origin"
                ]
              ],
              [
                "add",
                "$origin",
                "_T.$previous.$origin"
              ]
            ]
          ],
          "previous": [
            [
              "copy",
              "$generated_id"
            ],
            [
              "copy",
              "$origin"
            ]
          ]
        },
        "type": "dtl"
      }
    ],
    "type": "pipe"
  },
  {
    "_id": "{{@ system @}}-{{@ datatype @}}-event",
    "compaction": {
      "keep_versions": 0,
      "time_threshold_hours": 168
    },
    "namespaced_identifiers": false,
    "source": {
      "type": "http_endpoint"
    },
    "transform": [
      {
        "rules": {
          "default": [
            [
              "copy",
              "*"
            ],
            [
              "add",
              "_id",
              [
                "string",
                "_S.id"
              ]
            ]
          ]
        },
        "type": "dtl"
      }
    ],
    "type": "pipe"
  },
  {
    "_id": "{{@ system @}}-{{@ datatype @}}-event-processed",
    "namespaced_identifiers": false,
    "source": {
      "dataset": "{{@ system @}}-{{@ datatype @}}-event",
      "type": "dataset"
    },
    "transform": {
      "rules": {
        "default": [
          [
            "if",
            [
              "eq",
              "_S.event",
              "{{@ datatype @}}.delete"
            ],
            [
              "add",
              "_deleted",
              true
            ]
          ],
          [
            "merge",
            "_S.value"
          ]
        ]
      },
      "type": "dtl"
    },
    "type": "pipe"
  },
  {
    "_id": "{{@ system @}}-{{@ datatype @}}-collect",
    "namespaced_identifiers": false,
    "source": {
      "datasets": [
        "{{@ system @}}-{{@ datatype @}}-all",
        "{{@ system @}}-{{@ datatype @}}-event-processed"
      ],
      "type": "merge_datasets"
    },
    "type": "pipe"
  },
  {
    "_id": "{{@ system @}}-{{@ datatype @}}-all",
    "namespaced_identifiers": false,
    "source": {
      "operation": "list",
      "properties": {
        "datatype": "{{@ datatype @}}"
      },
      "system": "{{@ system @}}",
      "type": "rest"
    },
    "type": "pipe"
  },
  {
    "_id": "{{@ system @}}-{{@ datatype @}}-register-webhook",
    "namespaced_identifiers": false,
    "source": {
      "entities": [
        {
          "_id": "{{@ datatype @}}-create",
          "_updated": 0,
          "properties": {
            "event": "{{@ datatype @}}.create",
            "targetUrl": "{{@ service_url @}}/receivers/{{@ system @}}-{{@ datatype @}}-event/entities"
          }
        },
        {
          "_id": "{{@ datatype @}}-update",
          "_updated": 1,
          "properties": {
            "event": "{{@ datatype @}}.update",
            "targetUrl": "{{@ service_url @}}/receivers/{{@ system @}}-{{@ datatype @}}-event/entities"
          }
        },
        {
          "_id": "{{@ datatype @}}-delete",
          "_updated": 2,
          "properties": {
            "event": "{{@ datatype @}}.delete",
            "targetUrl": "{{@ service_url @}}/receivers/{{@ system @}}-{{@ datatype @}}-event/entities"
          }
        }
      ],
      "supports_since": true,
      "type": "embedded"
    },
    "transform": {
      "operation": "webhook-insert",
      "replace_entity": false,
      "side_effects": true,
      "system": "{{@ system @}}",
      "type": "rest"
    },
    "type": "pipe"
  },
  {
    "_id": "{{@ system @}}-{{@ datatype @}}-collect",
    "namespaced_identifiers": false,
    "source": {
      "datasets": [
        "{{@ system @}}-{{@ datatype @}}-all",
        "{{@ system @}}-{{@ datatype @}}-event-processed"
      ],
      "type": "merge_datasets"
    },
    "transform": {
      "rules": {
        "default": [
          [
            "copy",
            "*"
          ],
          [
            "add",
            "_origin",
            [
              "first",
              [
                "hops",
                {
                  "datasets": [
                    "{{@ system @}}-{{@ datatype @}}-share st"
                  ],
                  "return": "st.$origin",
                  "track-dependencies": false,
                  "where": [
                    [
                      "eq",
                      "_S.id",
                      "st.$generated_id"
                    ]
                  ]
                }
              ]
            ]
          ],
          [
            "if",
            [
              "is-not-null",
              "_T._origin"
            ],
            [
              "add",
              "$origin",
              "_T._origin"
            ]
          ]
        ]
      },
      "type": "dtl"
    },
    "type": "pipe"
  },
  {
    "_id": "{{@ system @}}-{{@ datatype @}}-all",
    "namespaced_identifiers": false,
    "source": {
      "operation": "list",
      "properties": {
        "datatype": "{{@ datatype @}}"
      },
      "system": "{{@ system @}}",
      "type": "rest"
    },
    "type": "pipe"
  }
]