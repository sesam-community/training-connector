{
  "_id": "{{@ system @}}-{{@ datatype @}}-enrich",
  "namespaces": {
    "identity": "{{@ system @}}-customer",
    "property": "{{@ system @}}-customer"
  },
  "source": {
    "dataset": "{{@ system @}}-customer-collect",
    "type": "dataset"
  },
  "transform": {
    "rules": {
      "default": [
        [
          "copy",
          "*",
          [
            "list",
            "$*",
            "_*"
          ]
        ],
        [
          "add",
          "_$retrieved",
          [
            "datetime",
            [
              "*",
              "_S._ts",
              1000
            ]
          ]
        ],
        [
          "add",
          "_id",
          [
            "string",
            "_S.id"
          ]
        ],
        [
          "add",
          "_based_on_properties",
          [
            "list",
            "accountManager.id",
            "deliveryAddress.addressLine1",
            "deliveryAddress.addressLine2",
            "deliveryAddress.city",
            "deliveryAddress.country.id",
            "deliveryAddress.postalCode",
            "email",
            "id",
            "invoiceEmail",
            "invoiceSendMethod",
            "name",
            "organizationNumber",
            "overdueNoticeEmail",
            "phoneNumber",
            "phoneNumberMobile",
            "physicalAddress.addressLine1",
            "physicalAddress.addressLine2",
            "physicalAddress.city",
            "physicalAddress.country.id",
            "physicalAddress.postalCode",
            "postalAddress.addressLine1",
            "postalAddress.addressLine2",
            "postalAddress.city",
            "postalAddress.country.id",
            "postalAddress.postalCode",
            "website"
          ]
        ],
        [
          "add",
          "ps:P813",
          "_T._$retrieved"
        ],
        [
          "add",
          "p:P144",
          [
            "dict",
            "ps:P248",
            [
              "ni",
              "_T._id"
            ],
            "ps:P144",
            [
              "apply",
              "remove-unmapped-properties",
              [
                "dict",
                "data",
                "_S.",
                "prefix",
                ""
              ]
            ],
            "ps:P813",
            "_R._T._$retrieved"
          ]
        ],
        [
          "copy",
          "$origin"
        ],
        [
          "add",
          "p:P3158",
          [
            "dict",
            "ps:P248",
            [
              "ni",
              "_T._id"
            ],
            "ps:P3158",
            "_T._based_on_properties",
            "ps:P813",
            "_R._T._$retrieved"
          ]
        ],
        [
          "add",
          "ps:P170",
          "_T.$origin"
        ]
      ],
      "is-match": [
        [
          "comment",
          "workaround for shadowing the outer _. variable"
        ],
        [
          "discard",
          [
            "is-not-empty",
            [
              "filter",
              [
                "matches",
                "_S.pattern",
                "_."
              ],
              "_R._T._based_on_properties"
            ]
          ]
        ]
      ],
      "remove-unmapped-properties": [
        [
          "comment",
          "function that builds up the dotted key and checks if one of dotted notations in $based_on_properties starts with this dotted key, recurses if the value is a dict"
        ],
        [
          "comment",
          "the inner 'map' checks if key matches any of the paths in $based_on_properties and recurses dicts"
        ],
        [
          "comment",
          "the 'group' removes keys for values that are null, empty strings, empty lists or empty dicts (after recursively removing unmapped properties) and groups lists of dicts"
        ],
        [
          "comment",
          "the 'map-dict' checks if the values are single valued lists and unwraps them as the previous group collects all values in lists"
        ],
        [
          "comment",
          "possible optimizations: don't recurse deep or long lists of dicts if there is no prefix that matches"
        ],
        [
          "comment",
          "possible optimizations: drop outer map-dict that unwraps the single value lists as the values are normalized regardless"
        ],
        [
          "merge",
          [
            "map-dict",
            "_.",
            [
              "if",
              [
                "eq",
                [
                  "count",
                  "_."
                ],
                1
              ],
              [
                "first",
                "_."
              ],
              "_."
            ],
            [
              "dict",
              [
                "group",
                [
                  "if",
                  [
                    "or",
                    [
                      "and",
                      [
                        "is-dict",
                        [
                          "last",
                          "_."
                        ]
                      ],
                      [
                        "gt",
                        [
                          "count",
                          [
                            "last",
                            "_."
                          ]
                        ],
                        0
                      ]
                    ],
                    [
                      "and",
                      [
                        "not",
                        [
                          "is-dict",
                          [
                            "last",
                            "_."
                          ]
                        ]
                      ],
                      [
                        "and",
                        [
                          "is-not-empty",
                          [
                            "last",
                            "_."
                          ]
                        ],
                        [
                          "neq",
                          [
                            "last",
                            "_."
                          ],
                          ""
                        ]
                      ]
                    ]
                  ],
                  [
                    "first",
                    "_."
                  ]
                ],
                [
                  "last",
                  "_."
                ],
                [
                  "map",
                  [
                    "list",
                    [
                      "if",
                      [
                        "is-not-empty",
                        [
                          "apply",
                          "is-match",
                          [
                            "dict",
                            "pattern",
                            [
                              "concat",
                              "_S.prefix",
                              [
                                "ni-id",
                                [
                                  "ni",
                                  [
                                    "first",
                                    "_."
                                  ]
                                ]
                              ],
                              "*"
                            ]
                          ]
                        ]
                      ],
                      [
                        "ni-id",
                        [
                          "ni",
                          [
                            "first",
                            "_."
                          ]
                        ]
                      ]
                    ],
                    [
                      "if",
                      [
                        "is-dict",
                        [
                          "last",
                          "_."
                        ]
                      ],
                      [
                        "apply",
                        "remove-unmapped-properties",
                        [
                          "dict",
                          "data",
                          [
                            "last",
                            "_."
                          ],
                          "prefix",
                          [
                            "concat",
                            "_S.prefix",
                            [
                              "ni-id",
                              [
                                "ni",
                                [
                                  "first",
                                  "_."
                                ]
                              ]
                            ],
                            "."
                          ]
                        ]
                      ],
                      [
                        "last",
                        "_."
                      ]
                    ]
                  ],
                  [
                    "items",
                    "_S.data"
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    },
    "type": "dtl"
  },
  "type": "pipe"
}