[
  {
    "_id": "{{@ system @}}-{{@ datatype @}}-all",
    "namespaced_identifiers": false,
    "source": {
      "operation": "{{@ datatype @}}-list",
      "system": "{{@ system @}}",
      "type": "rest"
    },
    "type": "pipe"
  },
  {
    "_id": "{{@ system @}}-{{@ datatype @}}-collect",
    "namespaced_identifiers": false,
    "source": {
      "datasets": [
        "{{@ system @}}-{{@ datatype @}}-all",
        "{{@ system @}}-{{@ datatype @}}-event2"
      ],
      "type": "merge_datasets"
    },
    "transform": [
      {
        "properties": {
          "primary_key": "<my-id>",
          "share_dataset": "{{@ system @}}-{{@ datatype @}}-share"
        },
        "template": "transform-collect-rest",
        "type": "template"
      },
      {
        "rules": {
          "addresses": [
            [
              "copy",
              "*",
              "changes"
            ]
          ],
          "default": [
            [
              "copy",
              "*",
              [
                "list",
                "physicalAddress",
                "postalAddress",
                "deliveryAddress"
              ]
            ],
            [
              "comment",
              "adding physicalAddress and it's updated timestamp but removing the changes field"
            ],
            [
              "add",
              "physicalAddress",
              [
                "apply",
                "addresses",
                "_S.physicalAddress"
              ]
            ],
            [
              "merge-union",
              [
                "max",
                "_.",
                [
                  "apply",
                  "last-modified",
                  "_S.physicalAddress.changes"
                ]
              ]
            ],
            [
              "comment",
              "adding postalAddress and it's updated timestamp but removing the changes field"
            ],
            [
              "add",
              "postalAddress",
              [
                "apply",
                "addresses",
                "_S.postalAddress"
              ]
            ],
            [
              "merge-union",
              [
                "max",
                "_.",
                [
                  "apply",
                  "last-modified",
                  "_S.postalAddress.changes"
                ]
              ]
            ],
            [
              "comment",
              "adding deliveryAddress and it's updated timestamp but removing the changes field"
            ],
            [
              "add",
              "deliveryAddress",
              [
                "apply",
                "addresses",
                "_S.deliveryAddress"
              ]
            ],
            [
              "merge-union",
              [
                "max",
                "_.",
                [
                  "apply",
                  "last-modified",
                  "_S.deliveryAddress.changes"
                ]
              ]
            ],
            [
              "merge-union",
              [
                "max",
                "_.",
                [
                  "apply",
                  "last-modified",
                  "_S.changes"
                ]
              ]
            ],
            [
              "comment",
              "overwriting the $last-modified array with the highest timestamp in the array"
            ],
            [
              "add",
              "$last-modified",
              [
                "max",
                "_T.$last-modified"
              ]
            ],
            [
              "add",
              "changes",
              [
                "filter",
                [
                  "eq",
                  "_.changeType",
                  "CREATE"
                ],
                "_S.changes"
              ]
            ]
          ],
          "last-modified": [
            [
              "filter",
              [
                "in",
                "_S.changeType",
                [
                  "list",
                  "UPDATE",
                  "CREATE"
                ]
              ]
            ],
            [
              "add",
              "$last-modified",
              [
                "datetime-parse",
                "%Y-%m-%dT%H:%M:%S%z",
                "_S.timestamp"
              ]
            ]
          ]
        },
        "type": "dtl"
      }
    ],
    "type": "pipe"
  },
  {
    "_id": "{{@ system @}}-{{@ datatype @}}-event",
    "compaction": {
      "keep_versions": 0,
      "time_threshold_hours": 168
    },
    "namespaced_identifiers": false,
    "source": {
      "system": "{{@ system @}}",
      "type": "http_endpoint",
      "validation_expression": "{% if request_headers['X-Sesam-Authorization'] == secret('webhook_secret') %}{% else %}FAIL!{% endif %}"
    },
    "transform": [
      {
        "rules": {
          "default": [
            [
              "copy",
              "*"
            ],
            [
              "add",
              "_id",
              [
                "string",
                "_S.id"
              ]
            ]
          ]
        },
        "type": "dtl"
      }
    ],
    "type": "pipe"
  },
  {
    "_id": "{{@ system @}}-{{@ datatype @}}-event2",
    "namespaced_identifiers": false,
    "sink": {
      "set_initial_offset": "onload"
    },
    "source": {
      "dataset": "{{@ system @}}-{{@ datatype @}}-event",
      "type": "dataset"
    },
    "transform": {
      "rules": {
        "default": [
          [
            "if",
            [
              "eq",
              "_S.event",
              "{{@ datatype @}}.delete"
            ],
            [
              "add",
              "_deleted",
              true
            ]
          ],
          [
            "merge",
            "_S.value"
          ]
        ]
      },
      "type": "dtl"
    },
    "type": "pipe"
  },
  {
    "_id": "{{@ system @}}-{{@ datatype @}}-registerwebhook",
    "namespaced_identifiers": false,
    "sink": {
      "deletion_tracking": false,
      "set_initial_offset": "onload"
    },
    "source": {
      "entities": [
        {
          "_id": "{{@ datatype @}}-create",
          "_updated": 0,
          "properties": {
            "event": "{{@ datatype @}}.create",
            "fields": "*,changes,postalAddress(*,changes),physicalAddress(*,changes),deliveryAddress(*,changes)",
            "targetUrl": "{{@ service_url @}}/receivers/{{@ system @}}-{{@ datatype @}}-event/entities"
          }
        },
        {
          "_id": "{{@ datatype @}}-update",
          "_updated": 1,
          "properties": {
            "event": "{{@ datatype @}}.update",
            "fields": "*,changes,postalAddress(*,changes),physicalAddress(*,changes),deliveryAddress(*,changes)",
            "targetUrl": "{{@ service_url @}}/receivers/{{@ system @}}-{{@ datatype @}}-event/entities"
          }
        },
        {
          "_id": "{{@ datatype @}}-delete",
          "_updated": 2,
          "properties": {
            "event": "{{@ datatype @}}.delete",
            "fields": "*,changes,postalAddress(*,changes),physicalAddress(*,changes),deliveryAddress(*,changes)",
            "targetUrl": "{{@ service_url @}}/receivers/{{@ system @}}-{{@ datatype @}}-event/entities"
          }
        }
      ],
      "supports_since": true,
      "type": "embedded"
    },
    "transform": [
      {
        "rules": {
          "default": [
            [
              "copy",
              "properties"
            ],
            [
              "add",
              "id",
              [
                "first",
                [
                  "hops",
                  {
                    "datasets": [
                      "{{@ system @}}-{{@ datatype @}}-registerwebhook sink"
                    ],
                    "return": [
                      "first",
                      "sink.insert_response.value.id"
                    ],
                    "where": [
                      [
                        "eq",
                        "_S._id",
                        "sink._id"
                      ]
                    ]
                  }
                ]
              ]
            ],
            [
              "add",
              "$operation",
              [
                "if",
                [
                  "is-not-null",
                  "_T.id"
                ],
                "lookup",
                "insert"
              ]
            ]
          ]
        },
        "type": "dtl"
      },
      {
        "allowed_status_codes": "200,404",
        "operation": "webhook-lookup",
        "replace_entity": false,
        "response_property": "lookup_response",
        "response_status_property": "lookup_status_code",
        "side_effects": false,
        "system": "{{@ system @}}",
        "trigger_on": {
          "key": "$operation",
          "value": "lookup"
        },
        "type": "rest"
      },
      {
        "rules": {
          "default": [
            [
              "copy",
              "*"
            ],
            [
              "comment",
              "TODO: we should compare the state of the actual object vs our desired state."
            ],
            [
              "discard",
              [
                "or",
                [
                  "eq",
                  404,
                  "_T.lookup_status_code"
                ],
                [
                  "eq",
                  "_S.$operation",
                  "insert"
                ]
              ]
            ]
          ]
        },
        "type": "dtl"
      },
      {
        "allowed_status_codes": "200,201",
        "operation": "webhook-insert",
        "replace_entity": false,
        "response_property": "insert_response",
        "response_status_property": "insert_status_code",
        "side_effects": true,
        "system": "{{@ system @}}",
        "type": "rest"
      }
    ],
    "type": "pipe"
  },
  {
    "_id": "{{@ system @}}-{{@ datatype @}}-share",
    "batch_size": 1,
    "namespaced_identifiers": false,
    "sink": {
      "deletion_tracking": false,
      "set_initial_offset": "onload"
    },
    "source": {
      "dataset": "{{@ system @}}-{{@ datatype @}}-transformtraining",
      "type": "dataset"
    },
    "transform": [
      {
        "properties": {
          "client_side_patching": true,
          "operation_delete": "<my-operation>",
          "primary_key": "<my-id>",
          "rest_system": "<my-system>",
          "rewrite_rules_payload": {
            "rewrite_update_payload_after_patch": [
              [
                "add",
                "$payload",
                [
                  "list",
                  "_S._payload"
                ]
              ]
            ]
          },
          "share_dataset": "{{@ system @}}-{{@ datatype @}}-share"
        },
        "template": "transform-share-rest",
        "type": "template"
      }
    ],
    "type": "pipe"
  },
  {
    "_id": "{{@ system @}}-{{@ datatype @}}-transformtraining",
    "source": {
      "dataset": "{{@ system @}}-{{@ datatype @}}-transform-split",
      "supports_signalling": false,
      "type": "dataset"
    },
    "transform": {
      "rules": {
        "based-on": [
          [
            "copy",
            "*",
            [
              "list",
              "_*",
              "$*"
            ]
          ]
        ],
        "default": [
          [
            "if",
            [
              "in",
              "{{@ system @}}-{{@ datatype @}}",
              [
                "map",
                [
                  "ni-ns",
                  "_."
                ],
                "_S.$ids"
              ]
            ],
            [
              "remove",
              "$origin"
            ],
            [
              "add",
              "$origin",
              "_T.$origin"
            ]
          ],
          [
            "copy",
            "*",
            [
              "list",
              "$origin",
              "p:*",
              "ps:P*",
              "{{@ system @}}-{{@ datatype @}}:*"
            ]
          ],
          [
            "if",
            [
              "and",
              [
                "is-empty",
                "_S.id"
              ],
              [
                "is-empty",
                "_S.$origin"
              ]
            ],
            [
              "add",
              "$origin",
              [
                "ni",
                "_S._id"
              ]
            ],
            [
              "copy",
              "$origin"
            ]
          ],
          [
            "if",
            [
              "and",
              [
                "not",
                "_S.$replaced"
              ],
              [
                "eq",
                [
                  "ni-ns",
                  "_S._id"
                ],
                "{{@ system @}}-{{@ datatype @}}"
              ]
            ],
            [
              [
                "create",
                [
                  "apply",
                  "emit",
                  [
                    "ni",
                    "_S._id"
                  ]
                ]
              ],
              [
                "discard"
              ]
            ],
            [
              "add",
              "$based_on_properties",
              [
                "list",
                "EmailAddress",
                "Id",
                "InvoiceEmailAddress",
                "IsPerson",
                "MailAddress.AddressLine1",
                "MailAddress.AddressLine2",
                "MailAddress.City",
                "MailAddress.CountryCode",
                "MailAddress.ZipCode",
                "Name",
                "OrganizationNumber",
                "PhoneNumber",
                "WebsiteUrl"
              ]
            ]
          ]
        ],
        "emit": [
          [
            "add",
            "_id",
            [
              "string",
              "_S."
            ]
          ],
          [
            "add",
            "$id",
            [
              "ni-id",
              "_S."
            ]
          ],
          [
            "add",
            "_deleted",
            "_R._S._deleted"
          ],
          [
            "merge",
            "_R._T"
          ],
          [
            "add",
            "$based_on",
            [
              "first",
              [
                "map",
                "_.ps:P144",
                [
                  "filter",
                  [
                    "eq",
                    "_.ps:P248",
                    "_S."
                  ],
                  "_R._S.p:P144"
                ]
              ]
            ]
          ],
          [
            "add",
            "$based_on_properties",
            [
              "flatten",
              [
                "map",
                "_.ps:P3158",
                [
                  "filter",
                  [
                    "eq",
                    "_.ps:P248",
                    "_S."
                  ],
                  "_R._S.p:P3158"
                ]
              ]
            ]
          ]
        ]
      },
      "type": "dtl"
    },
    "type": "pipe"
  }
]